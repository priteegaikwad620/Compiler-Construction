%{
#include <stdio.h>
#include <stdlib.h>

void yyerror(const char *s);
int yylex(void);

%}

%union {
    int ival;
}

%token <ival> NUMBER
%token PLUS MINUS TIMES DIVIDE

%type <ival> expr term factor

%%

program:
    expr '\n'   { printf("Result: %d\n", $1); }
    ;

expr:
    expr PLUS term    { $$ = $1 + $3; }
    | expr MINUS term { $$ = $1 - $3; }
    | term
    ;

term:
    term TIMES factor { $$ = $1 * $3; }
    | term DIVIDE factor { $$ = $1 / $3; }
    | factor
    ;

factor:
    NUMBER
    ;

%%

void yyerror(const char *s) {
    fprintf(stderr, "error: %s\n", s);
}

int main(void) {
    printf("Enter an arithmetic expression:\n");
    return yyparse();
}
